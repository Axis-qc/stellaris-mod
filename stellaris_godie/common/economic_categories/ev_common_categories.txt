


#situations = {
#	parent = country
#	generate_mult_modifiers = {
#		produces upkeep
#	}
#	generate_add_modifiers = {
#		produces upkeep
#	}
#	modifier_category = country
#}
#
#country = {
#	hidden = yes
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#}

# Base income of country
#country_base = {
#	parent = country
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = country
#}

#trade_routes = {
#	#太虚
#	parent = trade
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#}
#
#edicts = {
#	use_for_ai_budget = yes
#	parent = country
#	ai_use_parent_for_resources_upkeep = {
#		energy
#		food
#		minerals
#	}
#	generate_mult_modifiers = {
#		cost
#		produces
#		upkeep
#	}
#	modifier_category = country
#}
#
#rare_edicts = {
#	use_for_ai_budget = yes
#	parent = edicts
#	generate_mult_modifiers = {
#		cost produces upkeep
#	}
#}
#
#campaigns = {
#	use_for_ai_budget = yes
#	parent = edicts
#	generate_mult_modifiers = {
#		cost produces upkeep
#	}
#}
#
#decisions = {
#	use_for_ai_budget = yes
#	parent = country
#	generate_mult_modifiers = {
#		cost produces upkeep
#	}
#}
#
#megastructures = {
#	use_for_ai_budget = yes
#	ai_use_parent_for_resources_upkeep = {
#		energy
#		consumer_goods
#	}
#	parent = country
#	generate_mult_modifiers = {
#		cost
#		produces
#		upkeep
#	}
#	generate_add_modifiers = {
#		cost
#		produces
#		upkeep
#	}
#	modifier_category = megastructure
#}
#
#colonies = {
#	use_for_ai_budget = yes
#	ai_use_parent_for_resources_upkeep = {
#		energy
#	}
#	modifier_category = ship
#
#	triggered_cost_modifier = {
#		key = ship_colonizer
#		use_parent_icon = yes
#		modifier_types = {
#			mult
#			add
#		}
#
#		trigger = {
#			is_scope_valid = yes #When called from ship designer the design is not valid yet.
#			is_ship_class = shipclass_colonizer
#		}
#	}
#
#	parent = ships
#}
#ships = {
#	use_for_ai_budget = yes
#	generate_mult_modifiers = {
#		produces upkeep cost
#	}
#	generate_add_modifiers = {
#		produces upkeep cost
#	}
#	ai_use_parent_for_resources_upkeep = {
#		energy
#	}
#	parent = country
#
#	modifier_category = ship
#	triggered_cost_modifier = {
#		key = ship_research_station
#		use_parent_icon = yes
#		modifier_types = {
#			mult
#			add
#		}
#		trigger = {
#			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
#			is_ship_size = research_station
#		}
#	}
#	triggered_produces_modifier = {
#		key = ship_mining_station
#		modifier_types = {
#			mult
#			add
#		}
#		trigger = {
#			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
#			is_ship_size = mining_station
#		}
#	}
#	triggered_cost_modifier = {
#		key = ship_constructor
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
#			is_ship_class = shipclass_constructor
#		}
#	}
#	triggered_cost_modifier = {
#		key = ship_titan
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
#			is_ship_size = titan
#		}
#	}
#	triggered_upkeep_modifier = {
#		key = ship_titan
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
#			is_ship_size = titan
#		}
#	}
#	triggered_cost_modifier = {
#		key = ship_colossus
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
#			is_ship_class = shipclass_military_special
#		}
#	}
#	triggered_upkeep_modifier = {
#		key = ship_colossus
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
#			is_ship_class = shipclass_military_special
#		}
#	}
#	triggered_cost_modifier = {
#		key = ship_juggernaut
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
#			is_ship_size = juggernaut
#		}
#	}
#	#Vanllia
#	triggered_produces_modifier = {
#		key = ship_transport
#		use_parent_icon = yes
#		modifier_types = {
#			mult
#			add
#		}
#		trigger = {
#			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
#			is_ship_size = transport
#		}
#	}
#	triggered_cost_modifier = {
#		key = starbase_shipyard_build
#		use_parent_icon = yes
#
#		modifier_types = {
#			mult add
#		}
#	}
#	#gdf
#	triggered_cost_modifier = {
#		key = gdf_ship
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#
#		trigger = {
#			is_scope_valid = yes #When called from ship designer the design is not valid yet.
#			has_ship_owner_type = galactic_community
#		}
#	}
#	#corvette
#	triggered_cost_modifier = {
#		key = ship_corvette
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#
#		trigger = {
#			is_scope_valid = yes
#			OR = {
#				is_ship_size = corvette
#				is_ship_size = offspring_corvette
#			}
#		}
#	}
#	triggered_upkeep_modifier = {
#		key = ship_corvette
#		use_parent_icon = yes
#		modifier_types = {
#			mult
#			add
#		}
#		trigger = {
#			is_scope_valid = yes
#			OR = {
#				is_ship_size = corvette
#				is_ship_size = offspring_corvette
#			}
#		}
#	}
#	#destroyer
#	triggered_cost_modifier = {
#		key = ship_destroyer
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#
#		trigger = {
#			is_scope_valid = yes
#			OR = {
#				is_ship_size = destroyer
#				is_ship_size = offspring_destroyer
#			}
#		}
#	}
#	triggered_upkeep_modifier = {
#		key = ship_destroyer
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_scope_valid = yes
#			OR = {
#				is_ship_size = destroyer
#				is_ship_size = offspring_destroyer
#			}
#		}
#	}
#	#cruser
#	triggered_cost_modifier = {
#		key = ship_cruiser
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#	
#		trigger = {
#			is_scope_valid = yes
#			OR = {
#				is_ship_size = cruiser
#				is_ship_size = offspring_cruiser
#			}
#		}
#	}
#	triggered_upkeep_modifier = {
#		key = ship_cruiser
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#		
#		trigger = {
#			is_scope_valid = yes
#			OR = {
#				is_ship_size = cruiser
#				is_ship_size = offspring_cruiser
#			}
#		}
#	}
#	#battleship
#	triggered_cost_modifier = {
#		key = ship_battleship
#		use_parent_icon = yes
#		modifier_types = {
#			mult
#			add
#		}
#		trigger = {
#			is_scope_valid = yes
#			OR = {
#				is_ship_size = battleship
#				is_ship_size = offspring_battleship
#			}
#		}
#	}
#	triggered_upkeep_modifier = {
#		key = ship_battleship
#		use_parent_icon = yes
#		modifier_types = {
#			mult
#			add
#		}
#		trigger = {
#			is_scope_valid = yes
#			OR = {
#				is_ship_size = battleship
#				is_ship_size = offspring_battleship
#			}
#		}
#	}
#	#science
#	triggered_cost_modifier = {
#		key = ship_science
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
#			is_ship_class = shipclass_science_ship
#		}
#	}
#	#ship_military
#	triggered_cost_modifier = {
#		key = ship_military
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#
#		trigger = {
#			is_scope_valid = yes
#			OR = {
#				is_ship_class = shipclass_military
#				is_ship_class = shipclass_military_special
#			}
#		}
#	}
#	triggered_cost_modifier = {
#		key = ship_military_station_small
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#
#		trigger = {
#			is_scope_valid = yes
#			is_ship_size = military_station_small
#		}
#	}
#
#	triggered_upkeep_modifier = {
#		key = shipsize_military_station_small
#		use_parent_icon = yes
#		modifier_types = {
#			mult add
#		}
#
#		trigger = {
#			is_scope_valid = yes
#			is_ship_size = military_station_small
#		}
#	}
#}

ev_ships = {
	use_for_ai_budget = yes
	modifier_category = ship
	generate_add_modifiers = {
		produces upkeep cost
	}
	generate_mult_modifiers = {
		produces upkeep cost
	}
	#太虚
	triggered_cost_modifier = {
		key = ship_mini_homeless_ev
		modifier_types = { 
			add mult
		}
		trigger = {
			is_scope_valid = yes
			is_ship_size = mini_homeless_ship
		}
	}
	triggered_upkeep_modifier = {
		key = ship_mini_homeless_ev
		modifier_types = { 
			add mult
		}
		trigger = {
			is_scope_valid = yes
			is_ship_size = mini_homeless_ship
		}
	}
	triggered_cost_modifier = {
		key = ev_fleet_size_ships
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = ev_fleet_size_ship
		}
	}
	triggered_upkeep_modifier = {
		key = ev_fleet_size_ships
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = ev_fleet_size_ship
		}
	}
	triggered_cost_modifier = {
		key = ship_megastructures_homeless_ev
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = megastructures_homeless_ship
		}
	}
	triggered_cost_modifier = {
		key = ship_homeless_ev
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			OR = {
				is_ship_size = homeless_ship
				is_ship_size = homeless_ship_starbase
				is_ship_size = mini_homeless_ship
			}
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	parent = country
	#country
	#ships
}

ship_components = {
	parent = ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
}

ship_components_minerals_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_energy_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#modifier_category = component
}

ship_components_food_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_alloys_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_consumer_goods_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_volatile_motes_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_rare_crystals_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_exotic_gases_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_research_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_unity_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_modifier_PD = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_food_energy_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_manpower_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_pop_kill = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_build_ship = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}
#特殊资源

ship_components_dark_matter_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_sr_zro_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

ship_components_nanites_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}



ship_components_sr_living_metal_ev = {
	parent = ev_ships
	generate_mult_modifiers = {
		cost produces upkeep
	}
	generate_add_modifiers = {
		cost produces upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	# modifier_category = component
}

#####太虚结束
#planets = {
#	parent = country
#	use_for_ai_budget = yes
#	ai_use_parent_for_resources_upkeep = {
#		energy
#	}
#	generate_mult_modifiers = {
#		produces
#	}
#	generate_add_modifiers = {
#		produces
#	}
#	hidden = yes
#}
#
#planet_structures = {
#	parent = planets
#	hidden = yes
#	generate_add_modifiers = {
#		cost
#		upkeep
#		produces
#	}
#	generate_mult_modifiers = {
#		cost
#		upkeep
#		produces
#	}
#	modifier_category = planet
#}
#
#planet_buildings = {
#	parent = planet_structures
#	generate_mult_modifiers = {
#		cost
#		upkeep
#	}
#	generate_add_modifiers = {
#		cost
#		upkeep
#	}
#	modifier_category = planet
#}
#
#planet_branch_offices = {
#	parent = planets
#	generate_mult_modifiers = {
#		cost
#		#太虚
#		produces
#		#
#	}
#	generate_add_modifiers = {
#		cost
#		produces
#	}
#	modifier_category = planet
#}
#
##太虚
#planet_branch_office_buildings = {
#	parent = planets
#	generate_mult_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	modifier_category = planet
#}
#
#planet_jobs = {
#	parent = planets
#	generate_add_modifiers = {
#		produces 
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#
#	triggered_produces_modifier = {
#		key = planet_jobs_slave
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_pop_category = slave
#			has_job_category = worker
#		}
#	}
#
#	triggered_produces_modifier = {
#		key = habitat_jobs
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			exists = planet
#			planet = { is_planet_class = pc_habitat }
#		}
#	}
#
#	triggered_produces_modifier = {
#		key = non_artificial_planet_jobs
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			exists = planet
#			planet = { is_artificial = no }
#		}
#	}
#
#	triggered_produces_modifier = {
#		key = planet_jobs_worker
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			OR = {
#				is_pop_category = worker
#				AND = {
#					is_pop_category = slave # Yes, slave should count towards both worker and slave
#					has_job_category = worker
#				}
#				is_pop_category = simple_drone
#			}
#		}
#	}
#
#	triggered_produces_modifier = { #use this one if deliberately excluding worker drones
#		key = planet_jobs_worker_only
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			OR = {
#				is_pop_category = worker
#				AND = {
#					is_pop_category = slave # Yes, slave should count towards both worker and slave
#					has_job_category = worker
#				}
#			}
#		}
#	}
#
#	triggered_produces_modifier = {
#		key = planet_jobs_specialist
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			OR = {
#				is_pop_category = specialist
#				is_pop_category = complex_drone #planet_jobs_complex_drone is preferable for stuff visible during galaxy setup
#				AND = {
#					is_pop_category = slave
#					has_job_category = specialist
#				}
#			}
#		}
#	}
#
#	triggered_produces_modifier = { #use this one if deliberately excluding complex drones
#		key = planet_jobs_specialist_only
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			OR = {
#				is_pop_category = specialist
#				AND = {
#					is_pop_category = slave
#					has_job_category = specialist
#				}
#			}
#		}
#	}
#
#	triggered_produces_modifier = {
#		key = planet_jobs_ruler
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_pop_category = ruler
#		}
#	}
#
#	triggered_produces_modifier = {
#		key = planet_jobs_simple_drone
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_pop_category = simple_drone
#		}
#	}
#
#	triggered_produces_modifier = {
#		key = planet_jobs_complex_drone
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_pop_category = complex_drone
#		}
#	}
#
#	triggered_produces_modifier = {
#		key = planet_jobs_complex_and_simple_drone
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			OR = {
#				is_pop_category = complex_drone
#				is_pop_category = simple_drone
#			}
#
#		}
#	}
#
#	triggered_produces_modifier = {
#		key = planet_jobs_robotic
#		modifier_types = {
#			mult add
#		}
#		trigger = {
#			is_robot_pop_group = yes
#		}
#	}
#}
#
#
#planet_jobs_productive = { #this should contain all categories that primarily produce resources (rather than e.g. amenities, trade, stability)
#	parent = planet_jobs
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#planet_bio_trophies = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_pop_assemblers = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_farmers = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_miners = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_sr_miners = { #added because we don't want miners_minerals_produces_add to apply to these
#	parent = planet_miners
#	generate_add_modifiers = {
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_livestock = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_technician = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_executives = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_managers = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_administrators = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_bureaucrats = {
#	icon = "job_bureaucrat"
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_executives = {
#	parent = planet_politicians
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_researchers = {
#	icon = "job_researcher"
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_metallurgists = {
#	icon = "job_foundry"
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_culture_workers = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_evaluators = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_synapse_drones = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_nobles = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_merchants = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_entertainers = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_soldiers = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_necromancers = {
#	parent = planet_researchers
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_priests = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#}
#
#planet_enforcers = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_telepaths = {
#	parent = planet_enforcers
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_doctors = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_refiners = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_translucers = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_chemists = {
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#}
#
#planet_artisans = {
#	icon = "job_artisan"
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_necro_apprentices = {
#	parent = planet_pop_assemblers
#	generate_mult_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_necromancers = {
#	parent = planet_researchers
#	generate_mult_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	modifier_category = pop
#}
#
#
#planet_politicians = {
#	parent = planet_jobs_productive
#	generate_mult_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	modifier_category = pop
#}
#
#planet_pops = {
#	parent = planets
#	#太虚
#	generate_mult_modifiers = {
#		upkeep
#		produces
#	}
#	generate_add_modifiers = {
#		upkeep
#		produces
#	}
#	triggered_upkeep_modifier = {
#		key = planet_pops_lithoid
#		modifier_types = {
#			mult
#		}
#		trigger = {
#			is_species_class = LITHOID
#		}
#	}
#	triggered_upkeep_modifier = {
#		key = planet_pops_robotics
#		modifier_types = {
#			mult
#			add
#		}
#		trigger = {
#			is_robot_pop_group = yes
#		}
#	}
#	triggered_upkeep_modifier = {
#		key = planet_pops_organics
#		modifier_types = {
#			mult
#			add
#		}
#		trigger = {
#			is_robot_pop_group = no
#		}
#	}
#	triggered_upkeep_modifier = {
#		key = planet_pops_unemployed
#		modifier_types = {
#			add
#			mult
#		}
#		trigger = {
#			is_unemployed = yes
#		}
#	}
#}
#
#unemployment_resources = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		#太虚
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
##太虚
#pop_category_precursor = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#pop_category_xeno_ward = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#pop_category_pre_sapients = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#pop_category_purge = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#pop_category_bio_trophy = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#}
#
#pop_category_slave = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#pop_category_robot = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#}
#
#pop_category_drones = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#pop_category_workers = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#pop_category_specialists = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#pop_category_rulers = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
#pop_category_assimilation = {
#	parent = planet_pops
#	generate_add_modifiers = {
#		produces
#		upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	modifier_category = pop
#}
#
##--太虚结束--
#planet_deposits = {
#	parent = planets
#}
#
#
#armies = {
#	use_for_ai_budget = yes
#	generate_mult_modifiers = {
#		#太虚
#		produces
#		cost
#		upkeep
#	}
#	#太虚
#	modifier_category = army
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	ai_use_parent_for_resources_upkeep = {
#		energy
#	}
#	parent = country
#}
#
#leaders = {
#	use_for_ai_budget = yes
#	generate_mult_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	modifier_category = leader
#	ai_use_parent_for_resources_upkeep = {
#		energy
#	}
#	parent = country
#}
#
#leader_admirals = {
#	parent = leaders
#	generate_mult_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	modifier_category = leader
#}
#
#leader_generals = {
#	generate_mult_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	modifier_category = leader
#}
#
#leader_scientists = {
#	parent = leaders
#	generate_mult_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	modifier_category = leader
#}
#
#leader_governors = {
#	parent = leaders
#	generate_mult_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	modifier_category = leader
#}
#
#leader_generals = {
#	parent = leaders
#	generate_mult_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#		cost
#		upkeep
#	}
#	modifier_category = leader
#}
#diplomacy = {
#	hidden = yes
#	parent = country
#	generate_mult_modifiers = {
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#	}
#	modifier_category = country
#}
#
#
#subjects = {
#	parent = diplomacy
#	generate_mult_modifiers = {
#		produces
#	}
#	generate_add_modifiers = {
#		produces
#	}
#}
#
#federation = {
#	parent = diplomacy
#	generate_mult_modifiers = {
#		produces
#	}
#	generate_add_modifiers = {
#		produces
#	}
#	modifier_category = country
#}
#
#rivalries = {
#	parent = diplomacy
#	generate_mult_modifiers = {
#		produces
#	}
#	generate_add_modifiers = {
#		produces
#	}
#}
#
#non_aggression_pacts = {
#	parent = diplomacy
#	generate_mult_modifiers = {
#		produces
#	}
#	generate_add_modifiers = {
#		produces
#	}
#}
#
#research_agreements = {
#	parent = diplomacy
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#	}
#}
#
#commercial_pacts = {
#	parent = diplomacy
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	generate_add_modifiers = {
#		produces
#	}
#}
#
#defensive_pacts = {
#	parent = diplomacy
#	generate_mult_modifiers = {
#		produces
#	}
#	generate_add_modifiers = {
#		produces
#	}
#}
#
#guarantees = {
#	parent = diplomacy
#	generate_mult_modifiers = {
#		produces
#	}
#	generate_add_modifiers = {
#		produces
#	}
#}

monthly_trades = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
	modifier_category = country
}

relics = {
	#太虚
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
}

starbase_buildings = {
	parent = starbase_constructions

	generate_mult_modifiers = {
		cost upkeep produces
	}
	generate_add_modifiers = {
		cost upkeep produces
	}
	modifier_category = starbase
}

starbase_modules = {
	parent = starbase_constructions

	generate_mult_modifiers = {
		cost upkeep produces
	}
	generate_add_modifiers = {
		cost upkeep produces
	}
	modifier_category = starbase
}

stations = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	generate_mult_modifiers = {
		cost upkeep produces
	}
	generate_add_modifiers = {
		cost upkeep produces
	}

	parent = country
	modifier_category = deposit #it applies to the planet
}

station_gatherers = {
	parent = stations

	generate_mult_modifiers = {
		cost upkeep produces
	}
	generate_add_modifiers = {
		cost upkeep produces
	}
	modifier_category = deposit #it applies to the planet
}

station_researchers = {
	parent = stations

	generate_mult_modifiers = {
		cost upkeep produces
	}
	generate_add_modifiers = {
		cost upkeep produces
	}
	modifier_category = deposit #it applies to the planet
}

station_observers = {
	generate_mult_modifiers = {
		cost upkeep produces
	}
	generate_add_modifiers = {
		cost upkeep produces
	}
	parent = stations
}

planet_buildings = {
	parent = planet_structures

	generate_mult_modifiers = {
		cost upkeep produces
	}
	generate_add_modifiers = {
		cost upkeep produces
	}
	modifier_category = planet
}

operations = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
	parent = country
	modifier_category = espionage
}

# Country wide modifier collection
country_container = {
	hidden = yes
	parent = country
}

country_monuments = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_ambition = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_federation_perks = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_civics = {
	parent = country_container
	generate_add_modifiers = {
		upkeep
		produces
	}
	modifier_category = country
}

country_ai_uprising = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_covenant = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_dessanu = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_extended_payout = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_shoulders = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_galactic_standard = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_concessions = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_first_contact = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_custodian = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_tech = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_traditions = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_councilor = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_ruler = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_agendas = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_ethic = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_first_league_homeworld = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_power_projection = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
	modifier_category = country
}


pop_factions = {
	parent = country
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

############

ev_statistics = {
	#太虚的统计
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
}

country_bombardment_steal = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
	modifier_category = country
}
country_homeless_trade = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
	modifier_category = country
}
