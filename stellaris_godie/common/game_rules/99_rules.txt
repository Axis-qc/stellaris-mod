#Tooltips will be generated from these rules when they fail. Use of custom_tooltip is recommended
#There are still multiple hard-coded rules that apply in addition to these.
#If rules here evaluate to true, there might still be other rules that make the action unavailable.
#If a rule here evaluates to false the action will become unavailable
# This = country
#can_be_part_of_galactic_council = {
#	OR = {
#		is_country_type = default
#		is_default_ev_country_type = yes
#	}
#	NOR = {
#		has_civic = civic_fanatic_purifiers
#		has_civic = civic_hive_devouring_swarm
#		has_civic = civic_machine_terminator
#	}
#}
#
## This = country
#can_be_part_of_galactic_community = {
#	custom_tooltip = {
#		fail_text = "community_default_failtext"
#		OR = {
#			is_country_type = default
#			is_default_ev_country_type = yes
#		}
#	}
#	custom_tooltip = {
#		fail_text = "community_homicidal_failtext"
#		NOR = {
#			has_civic = civic_fanatic_purifiers
#			has_civic = civic_hive_devouring_swarm
#			has_civic = civic_machine_terminator
#		}
#	}
#	custom_tooltip = {
#		fail_text = "community_declared_crisis_failtext"
#		has_been_declared_crisis = no
#	}
#	custom_tooltip = {
#		fail_text = "community_declared_crisis_failtext"
#		#fail_text = "community_overlord_declared_crisis_failtext"
#		OR = {
#			NOT = { exists = overlord }
#			overlord = { has_been_declared_crisis = no }
#		}
#	}
#}
## This = country
#can_be_part_of_galactic_empire = {
#	custom_tooltip = {
#		fail_text = "community_default_failtext"
#		OR = { 
#			is_country_type = default
#			is_default_ev_country_type = yes
#		}
#		
#	}
#	custom_tooltip = {
#		fail_text = "community_homicidal_failtext"
#		NOR = {
#			has_civic = civic_fanatic_purifiers
#			has_civic = civic_hive_devouring_swarm
#			has_civic = civic_machine_terminator
#		}
#	}
#	custom_tooltip = {
#		fail_text = "community_declared_crisis_failtext"
#		has_been_declared_crisis = no
#	}
#	custom_tooltip = {
#		fail_text = "community_declared_crisis_failtext"
#		#fail_text = "community_overlord_declared_crisis_failtext"
#		OR = {
#			NOT = { exists = overlord }
#			overlord = { has_been_declared_crisis = no }
#		}
#	}
#}
#ЬЋащ
###############
#Root = country
#This = planet
#can_colonize_outside_borders = {
#	root = {
#		OR = {
#			is_country_type = "ev_leviathans_crisis"
#		}
#	}
#	#always = no
#}

################
##########################
#Root = country
#This = pop
can_colonize_with_pop = {
	ROOT = {
		OR = {
			NOT = {
				is_default_ev_country_type = yes
			}
			AND = {
				is_default_ev_country_type = yes
				OR = {
					has_origin = origin_ev_both_choosen
					has_country_flag = has_ev_to_planets
					#has_civic = civic_ev_planet_and_fleet
				}
			}
		}
	}
	has_colonization_control = {
		type = colonization_control_no
		country = root
	}
	OR = {
		NOT = { has_trait = trait_self_modified }
		is_same_species = root
	}
	has_cybernetic_creed_trait = no
	NOR = {
		has_trait = trait_pathogenic_genes
		has_trait = trait_limited_cybernetic
	}
	if = {
		limit = {
			OR = {
				is_sapient = no
				has_trait = trait_zombie
			}
		}
		custom_tooltip = {
			always = no
		}
	}
	else = {
		always = yes
	}
}


###########################
###########################

#Root = country
#This = species
can_colonize_with_species = {
	ROOT = {
		OR = {
			NOT = {
				is_default_ev_country_type = yes
			}
			AND = {
				is_default_ev_country_type = yes
				OR = {
					has_origin = origin_ev_both_choosen
					has_country_flag = has_ev_to_planets
					#has_civic = civic_ev_planet_and_fleet
				}
			}
		}
	}
	has_colonization_control = {
		type = colonization_control_no
		country = root
	}
	OR = {
		NOT = { has_trait = trait_self_modified }
		is_same_species = root
	}
	if = {
		limit = {
			OR = {
				is_sapient = no
				has_trait = trait_zombie
			}
		}
		custom_tooltip = {
			always = no
		}
	}
	else_if = {
		limit = { has_trait = trait_hive_mind }
		root = { is_hive_empire = yes }
	}
	else = {
		always = yes
	}
}





#This rule is a condition for bombarding planets
#Root = fleet, potential attacker
#From = planet, potential target
can_orbital_bombard = {
	exists = FROM.OWNER
	NOT = {
		any_controlled_ship = {
			is_ship_size = colossus
		}
	}
	OR = {
		AND = {
			ROOT.CONTROLLER = {
				NOT = { has_communications = FROM.OWNER }
			}
			FROM.OWNER = {
				NOT = { is_country_type = primitive }
			}
		}
		AND = {
			ROOT.CONTROLLER = {
				NOR = {
					has_policy_flag = interference_passive
					has_policy_flag = interference_active
				}
			}
			FROM.OWNER = { is_country_type = primitive }
		}
		ROOT.CONTROLLER = { is_at_war_with = FROM.CONTROLLER }
		FROM = { is_planet_class = pc_infested }
		FROM.CONTROLLER = {
			OR = {
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				AND = {
					is_country_type = awakened_marauders
					ROOT.CONTROLLER = { is_hostile = prev }
				}
			}
		}
		ROOT.CONTROLLER = {
			OR = {
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				is_country_type = dormant_marauders
				is_country_type = marauder_raiders
				is_country_type = ruined_marauders
				is_country_type = gray_goo
				is_country_type = vol	
				is_default_ev_country_type = yes
				AND = {
					is_country_type = awakened_marauders
					FROM.CONTROLLER = { is_hostile = prev }
				}
			}
		}
		AND = {
			from.controller = {
				is_country_type = faction
				NOT = { is_same_value = ROOT.CONTROLLER }
			}
			from.owner = {
				is_same_value = ROOT.CONTROLLER
			}
		}
	}
}


#######################
###################
# this = ship
# root = country that kills ship
#can_spawn_debris = {
#	root = {
#		OR = {
#			is_country_type = default
#			is_default_ev_country_type = yes
#		}
#	}
#	exists = owner
#	owner = {
#		OR = {
#			NOT = {
#				has_ascension_perk = ap_enigmatic_engineering
#			}
#			NOT = {
#				is_default_ev_country_type = yes
#			}
#			#NOT = { is_country_type = wg_crisis_country }			
#		}
#	}
#}

#####################
###########################
# This = country
# Checked by is_criminal_syndicate trigger
is_criminal_syndicate_rule = {
	has_authority = auth_corporate
	OR = {
		has_valid_civic = civic_criminal_heritage
		has_valid_civic = civic_ev_criminal_ship
	}
}

###########################
############################
# This = country
can_use_galactic_market = {
	OR = {
		is_country_type = default
		AND = {
			is_default_ev_country_type = yes
			NOT = {
				has_policy_flag = ev_no_use_galactic_market
			}
		}
	}
	NOR = {
		has_civic = civic_fanatic_purifiers
		has_civic = civic_hive_devouring_swarm
		has_civic = civic_machine_terminator
	}
}

###########################

#can_add_claim = {
#	#hidden_trigger = {
#	#	if = {
#	#		limit = {
#	#			root = { NOT = { is_country_type = default } }
#	#		}
#	#		always = yes
#	#	}
#	#}
#	custom_tooltip = {
#		fail_text = CANNOT_ADD_CLAIM_POLICY
#		OR = {
#			root = { has_policy_flag = unrestricted_wars }
#			AND = {
#				exists = owner
#				owner = { is_gestalt = yes }
#			}
#			AND = {
#				exists = owner
#				owner = {
#					any_war = {
#						any_attacker = { is_same_value = prevprev }
#						any_defender = { is_same_value = root }
#					}
#				}
#			}
#		}
#	}
#	custom_tooltip = {
#		fail_text = CANNOT_ADD_CLAIM_NOT_VALID_EMPIRE
#		NAND = {
#			exists = owner
#			owner = {
#				NOR = {
#					is_country_type = default
#					is_default_ev_country_type = yes
#					is_country_type = fallen_empire
#					is_country_type = awakened_fallen_empire
#				}
#			}
#		}
#	}
#	custom_tooltip = {
#		fail_text = CANNOT_ADD_CLAIM_DEVOURING_SWARM
#		NAND = {
#			root = { has_valid_civic = civic_hive_devouring_swarm }
#			root = { is_lithoid_empire = no }
#		}
#	}
#	custom_tooltip = {
#		fail_text = CANNOT_ADD_CLAIM_DEVOURING_SWARM_LITHOID
#		NAND = {
#			root = { has_valid_civic = civic_hive_devouring_swarm }
#			root = { is_lithoid_empire = yes }
#		}
#	}
#	custom_tooltip = {
#		fail_text = CANNOT_ADD_CLAIM_ASSIMILATOR
#		NOT = { root = { has_valid_civic = civic_machine_assimilator } }
#	}
#	custom_tooltip = {
#		fail_text = CANNOT_ADD_CLAIM_PURIFIERS
#		NAND = {
#			exists = owner
#			root = { has_valid_civic = civic_fanatic_purifiers }
#			NOT = {	owner = { is_same_species = root } }
#		}
#	}
#	custom_tooltip = {
#		fail_text = CANNOT_ADD_CLAIM_EXTERMINATOR
#		NAND = {
#			exists = owner
#			root = { has_valid_civic = civic_machine_terminator }
#			owner = {
#				NOR = {
#					is_same_species = root
#					has_country_flag = synthetic_empire
#					has_authority = auth_machine_intelligence
#				}
#			}
#		}
#	}
#	custom_tooltip = {
#		fail_text = CANNOT_ADD_CLAIM_THEY_THREAT
#		NAND = {
#			exists = owner
#			owner = {
#				OR = {
#					has_valid_civic = civic_hive_devouring_swarm
#					has_valid_civic = civic_fanatic_purifiers
#					has_valid_civic = civic_machine_terminator
#					has_valid_civic = civic_machine_assimilator
#				}
#			}
#			root = {
#				NOR = {
#					has_valid_civic = civic_hive_devouring_swarm
#					has_valid_civic = civic_fanatic_purifiers
#					has_valid_civic = civic_machine_terminator
#					has_valid_civic = civic_machine_assimilator
#				}
#			}
#		}
#	}
#}

