
#All scopes are this/root = situation. You can scope to owner for the country or target for the target.

# test_situation = {
# 	#Note on locs: it expects "test_situation", "test_situation_type", and "test_situation_desc"
# 		#The difference between the first and second keys is that the first is the name while the Situation exists
# 		#It can use [Target.GetName] and so on.
# 		#The _type key is used in cases where the Situation does not exist yet, specifically the start_situation effect's tooltip
# 		#Consequently, stuff like [Target.GetName] will not work there.

#	desc = { text = x triggers = { } } #default is <key>_desc, but you can do triggered overrides

#	picture = GFX_evt_alien_nature 		#Also supports triggered pictures like in events

#	complete_icon = GFX_icon
#	complete_icon_frame = GFX_icon_frame
#	fail_icon = GFX_icon
#	fail_icon_frame = GFX_icon_frame

# 	category = positive #positive/negative/neutral - this affects the tone of various UI elements
#	complete_category = positive #Only for progress_direction = bidirectional - only affects progress towards completetion (right)
#	fail_category = negative #Only for progress_direction = bidirectional - only affects progress towards fail (left)

#	progress_direction = bidirectional #monodirectional/bidirectional (defaults to monodirectional)

# 	on_start = { }				#Effects when the Situation is created
# 	on_progress_complete = {	#Effects when Situation's progress has reached 100
# 		#You should always call destroy_situation = this from here or from an event fired by here
# 	}
# 	on_fail = {					#Effects when Situation's total progress is below 0
# 		#You should always call destroy_situation = this from here or from an event fired by here
#	}
# 	on_abort = {}		#Effects when Situation is cancelled via abort_trigger trigger
# 	abort_trigger = {} 	#Trigger for when a Situation should abort, firing on_abort

#	 start_value = 20	#Situation will start at this number. Default is 0

# 	modifier = { } 			#Modifier applying to the country experiencing the situation
#	 triggered_modifier = {	#Triggered modifier applying to the country experiencing the situation, if the triggers are true
#	 	potential = { }
#	 	modifier = { }
#	 }

# 	target_modifier = { } 			#Modifier applying to the target planet of a Situation. Does not work on other scope types!
# 	triggered_target_modifier = {	#Modifier applying to the target planet of a Situation, if the triggers are true. Does not work on other scope types!
# 		potential = { }
# 		modifier = { }
#	}

# 	#This behaves like an on_action. Note: technically, this is an on_action called test_situation. So don't call your situation "on_monthly_pulse"!
# 	on_monthly = {
# 		events = {
#	    }
# 		random_events = {
#	    }
#	 }

#	stages = { #List all your stages here, in the correct order.
#	 	low_level = {
#			icon = GFX_asset_name
#	 		end = 20
#	    }

#	    medium_level = {
#		    icon = GFX_asset_name
#	 	    end = 40
#	    }

#	    high_level = { 					#Expects the key to be localised. You can also define <key>_desc and it will show on the tooltip, but this is optional.
#		    icon = GFX_asset_name
#			background = GFX_asset_name
#			end = 100
#			on_first_enter = { }		#Effect for the first time this stage fires
#			modifier/triggered_modifier/target_modifier/triggered_target_modifier = { } #as standard (applies only during this Stage)
#			custom_tooltip = x 			#this will print in the stage tooltip (on_first_enter will not, because spoilers; modifiers will)
#	    }
#	}

# 	approach = {
# 		name = approach_a 	#This is localised. If you add a loc key "approach_a_desc", it will also show, but this is optional.
# 		icon = GFX_asset_icon
#		icon_background = GFX_asset_icon_background
# 		allow = { } 		#If this fails, the Approach is greyed out
# 		potential = { } 	#If this fails, the Approach is not shown
#		on_select = { } 	#Effect when you pick the Approach.

#		default = yes 		#Sets the Approach to be the Situation's default. This means that it will be picked when the Situation starts, and if the current
#							#Approach is invalidated (fails potential or allow check). This won't happen while the Situation is locked, so events which demand
#							#a choice of Approach can lock the situation (set_situation_locked) in immediate (or the Situation's on_start) and unlock them in after.

#		modifier/triggered_modifier/target_modifier/triggered_target_modifier = { } #as standard (applies only when this Approach is picked)

# 		resources = { 				#Resource table as standard
# 			category = situations
# 			cost = { }
# 			upkeep = { }
# 			produces = { }
# 		}
# 		ai_weight = { } 			#AI will pick the one with the highest weight
# 	}

# 	approach = {
# 		name = approach_b #all approaches must have at least a name

# 		#They also need to display well in the UI. So the game will force you to at least add a custom tooltip if it cannot find any effects to localise.
#		on_select = { custom_tooltip = deficit_approach_do_nothing_tooltip }
# 	}

# 	monthly_progress = {
# 		base = 1
# 		modifier = { 	#Standard weight fields, you can do everything that common/script_values/00_script_values.txt tells you about
# 			add = 2
# 			desc = federation_acceptance_reduce_fleet 	#Do not forget to add loc tooltips (the game will scream at you otherwise)
# 			<triggers>
# 		}
# 	}
# }

ev_leader_rebal = {
	picture = GFX_evt_voting
	category = negative
	fail_icon = GFX_situation_outcome_meh
	fail_icon_frame = GFX_situation_outcome_frame_green
	complete_icon = GFX_situation_outcome_revolt
	complete_icon_frame = GFX_situation_outcome_frame_red
	start_value = 20

	on_start = {

		add_situation_progress = owner.ev_struggle_value
		#owner = {
		#	#计算维持度影响的进度
		#	set_variable = {
		#		which = ev_maintenance_value_situations
		#		value = ev_maintenance_value
		#	}
		#	multiply_variable  = {
		#		which = ev_maintenance_value_situations
		#		value = -0.1
		#	}
		#	#
		#}
		#计算维持度影响的进度
		
		set_variable = {
			which = ev_maintenance_value_situations
			value = owner.ev_maintenance_value
		}
		multiply_variable  = {
			which = ev_maintenance_value_situations
			value = -0.1
		}
		#设置初始不满度和强度
		#强度-正相关；不满：负相关(指之后帝国评价乘以负号)
		set_variable = {
			which = ev_leader_rebal_strong
			value = 20
		}
		set_variable = {
			which = ev_leader_rebal_opinion
			value = 12
		}
		set_variable = {
			which = ev_leader_rebal_opinion_situations
			value = ev_leader_rebal_opinion
		}
		#计算不满影响的进度
		multiply_variable  = {
			which = ev_leader_rebal_opinion_situations
			value = 0.1
		}
	}
	on_monthly = {
		#random_events = {
		#	# Note: Whenever an event is triggered, other events will be blocked for at least 75 days (@recent_event_pause).
		#	10 = 0
		#	1 = 0
		#}
		events = {
			ev_situation.10
		}
		random_events = {
			# Note: Whenever an event is triggered, other events will be blocked for at least 75 days (@recent_event_pause).
			10 = 0
			1 = ev_situation.101
			1 = ev_situation.102
			1 = ev_situation.103
			1 = ev_situation.104
			1 = ev_situation.105
		}
	}
	monthly_progress = {
		base = 0.5
		
		
		modifier = {
			desc = ev_leader_rebal_a
			add = root.ev_maintenance_value_situations
			owner = { always = yes }
		}
		modifier = {
			desc = ev_leader_rebal_b
			add =  root.ev_leader_rebal_opinion_situations
			owner = { always = yes }
		}
		modifier = {
			desc = ev_leader_rebal_end
			add = -10
			owner = { has_country_flag = has_ev_ship_traitor }
		}
		modifier = {
			desc = ev_leader_rebal_end_set
			add = -100
			owner = { has_country_flag = ban_rebel_event }
		}
		modifier = {
			desc = ev_leader_rebal_end_now
			add = owner.value:ev_count_situations_rebal
			
		}
		
		#modifier = {
		#	desc = ev_leader_rebal_2
		#	add = 1
		#	owner = { check_variable = { which = ev_maintenance_value value < 0 } }
		#}
		#modifier = {
		#	desc = ev_leader_rebal_3
		#	add = 1.5
		#	owner = { check_variable = { which = ev_maintenance_value value < -15 } }
		#}
		#modifier = {
		#	desc = ev_leader_rebal_4
		#	add = 1.5
		#	owner = { check_variable = { which = ev_maintenance_value value < -25 } }
		#}
		#modifier = {
		#	desc = ev_leader_rebal_4
		#	add = 2
		#	owner = { check_variable = { which = ev_maintenance_value value < -40 } }
		#}
#
		#modifier = {
		#	desc = ev_leader_rebal_10
		#	add = -0.5
		#	owner = { check_variable = { which = ev_maintenance_value value > 15 } }
		#}
		#modifier = {
		#	desc = ev_leader_rebal_10
		#	add = -1
		#	owner = { check_variable = { which = ev_maintenance_value value > 30 } }
		#}
		#modifier = {
		#	desc = ev_leader_rebal_11
		#	add = -1
		#	owner = { check_variable = { which = ev_maintenance_value value > 45 } }
		#}
		#modifier = {
		#	desc = ev_leader_rebal_12
		#	add = -1
		#	owner = { check_variable = { which = ev_maintenance_value value > 65 } }
		#}
		#modifier = {
		#	desc = ev_leader_rebal_13
		#	add = -1
		#	owner = { check_variable = { which = ev_maintenance_value value > 100 } }
		#}
#
		#modifier = {
		#	desc = ev_leader_rebal_20
		#	add = -1.5
		#	owner = { has_country_flag = select_approach_ev_leader_rebal_2 }
		#}
	}
	on_progress_complete = {
		custom_tooltip = ev_leader_rebal_finish_tooltip
		hidden_effect = {

			owner = {
				set_variable = {
					which = ev_leader_rebal_strong
					value = root
				}
				country_event = {
					id = ev_leader.2091
					days = 1
					random = 10
				}
			}
			destroy_situation = this
		}
	}
	on_fail = {
		custom_tooltip = ev_leader_rebal_fail_tooltip
		hidden_effect = {
			destroy_situation = this
			owner = { 
				change_variable = {
					which = ev_maintenance_value
					value = 10
				}
			}
		}
	}
	on_abort = {
		
	}
	abort_trigger = {
		
	}
	stages = {
		stage_1 = {
			icon = GFX_situation_stage_1
			icon_background = GFX_situation_stage_frame_red
			end = 25
		}
		stage_2 = {
			icon = GFX_situation_stage_2
			icon_background = GFX_situation_stage_frame_red
			end = 50
			modifier = {
				country_naval_cap_mult = -0.1
			}
			on_first_enter = { 
				owner = { 
					change_variable = {
						which = ev_maintenance_value
						value = -5
					}
				}
			}
		}
		stage_3 = {
			icon = GFX_situation_stage_3
			icon_background = GFX_situation_stage_frame_red
			end = 75
			modifier = {
				country_naval_cap_mult = -0.25
			}
			on_first_enter = { 
				owner = { 
					change_variable = {
						which = ev_maintenance_value
						value = -5
					}
				}
			}
		}
		stage_4 = {
			icon = GFX_situation_stage_4
			icon_background = GFX_situation_stage_frame_red
			end = 100
			modifier = {
				country_naval_cap_mult = -0.5
			}
			on_first_enter = { 
				owner = { 
					change_variable = {
						which = ev_maintenance_value
						value = -5
					}
				}
			}
		}
	}

	#应对措施
	#不作为
	approach = {
		name = approach_ev_leader_rebal_1
		allow = {
			#NOR = {
			#	owner = { has_country_flag = select_approach_ev_leader_rebal_3 }
			#	owner = { has_country_flag = select_approach_ev_leader_rebal_2 }
			#}
		}
		icon = GFX_situation_approach_this_is_fine
		icon_background = GFX_situation_approach_bg_yellow
		default = yes
		on_select = {
			#owner = { 
			#	change_variable = {
			#		which = ev_maintenance_value
			#		value = -5
			#	}
			#	set_country_flag = select_approach_ev_leader_rebal_1 
			#	remove_country_flag = select_approach_ev_leader_rebal_4
			#	remove_country_flag = select_approach_ev_leader_rebal_2
			#	remove_country_flag = select_approach_ev_leader_rebal_3
			#}

			set_situation_flag = select_approach_ev_leader_rebal_1 
			remove_situation_flag = select_approach_ev_leader_rebal_4
			remove_situation_flag = select_approach_ev_leader_rebal_2
			remove_situation_flag = select_approach_ev_leader_rebal_3

		}
		ai_weight = 0
	}
	#怀柔
	approach = {
		name = approach_ev_leader_rebal_2
		allow = {
			#NOR = {
			#	owner = { has_country_flag = select_approach_ev_leader_rebal_1 }
			#	owner = { has_country_flag = select_approach_ev_leader_rebal_3 }
			#}
		}
		icon = GFX_situation_approach_this_is_fine
		icon_background = GFX_situation_approach_bg_green
		default = yes
		resources = { 				#Resource table as standard
			category = situations
			cost = { 
				unity = 1000
			}
			upkeep = { 
				unity = 15
			}
			upkeep = { 
				unity = 4
				mult = owner.value:ev_cap_cost
			}
			produces = { }
		}
		on_select = {
			#owner = { 
			#	change_variable = {
			#		which = ev_maintenance_value
			#		value = -5
			#	}
			#	custom_tooltip = approach_ev_leader_rebal_2.tooltip
			#	set_country_flag = select_approach_ev_leader_rebal_2 
			#	remove_country_flag = select_approach_ev_leader_rebal_1
			#	remove_country_flag = select_approach_ev_leader_rebal_4
			#	remove_country_flag = select_approach_ev_leader_rebal_3
			#}
			custom_tooltip = approach_ev_leader_rebal_2.tooltip
			set_situation_flag = select_approach_ev_leader_rebal_2 
			remove_situation_flag = select_approach_ev_leader_rebal_1
			remove_situation_flag = select_approach_ev_leader_rebal_4
			remove_situation_flag = select_approach_ev_leader_rebal_3
		}
		ai_weight = 2
	}

	#强硬
	approach = {
		name = approach_ev_leader_rebal_3
		allow = {
			#NOR = {
			#	owner = { has_country_flag = select_approach_ev_leader_rebal_1 }
			#	owner = { has_country_flag = select_approach_ev_leader_rebal_2 }
			#}
		}
		icon = GFX_situation_approach_this_is_fine
		icon_background = GFX_situation_approach_bg_red
		default = yes
		resources = { 				#Resource table as standard
			category = situations
			cost = { 
				alloys = 100
				energy = 100
			}
			upkeep = { 
				alloys = 6
				energy = 10
			}
			upkeep = { 
				alloys = 1
				energy = 5
				mult = owner.value:ev_cap_cost
			}
			produces = { }
		}
		on_select = {
			#owner = { 
			#	change_variable = { which = ev_maintenance_value value = -5 }
			#	custom_tooltip = approach_ev_leader_rebal_3.tooltip
			#	set_country_flag = select_approach_ev_leader_rebal_3 
			#	remove_country_flag = select_approach_ev_leader_rebal_1
			#	remove_country_flag = select_approach_ev_leader_rebal_2
			#	remove_country_flag = select_approach_ev_leader_rebal_4
			#}

			custom_tooltip = approach_ev_leader_rebal_3.tooltip
			set_situation_flag = select_approach_ev_leader_rebal_3 
			remove_situation_flag = select_approach_ev_leader_rebal_1
			remove_situation_flag = select_approach_ev_leader_rebal_2
			remove_situation_flag = select_approach_ev_leader_rebal_4
		}
		ai_weight = 1
	}


	#大清洗
	approach = {
		name = approach_ev_leader_rebal_4
		allow = {
			#NOR = {
			#	owner = { has_country_flag = select_approach_ev_leader_rebal_1 }
			#	owner = { has_country_flag = select_approach_ev_leader_rebal_2 }
			#}
		}
		icon = GFX_situation_approach_this_is_fine
		icon_background = GFX_situation_approach_bg_black
		default = yes
		resources = { 				#Resource table as standard
			category = situations
			cost = { 
				alloys = 100
				energy = 100
				unity = 500
			}
			upkeep = { 
				alloys = 6
				energy = 10
				unity = 8
			}
			upkeep = { 
				alloys = 1
				energy = 3
				unity = 4
				mult = owner.value:ev_cap_cost
			}
			produces = { }
		}
		on_select = {
			#owner = { 
			#	change_variable = { which = ev_maintenance_value value = -15 }
			#	custom_tooltip = approach_ev_leader_rebal_4.tooltip
			#	set_country_flag = select_approach_ev_leader_rebal_4 
			#	remove_country_flag = select_approach_ev_leader_rebal_1
			#	remove_country_flag = select_approach_ev_leader_rebal_2
			#	remove_country_flag = select_approach_ev_leader_rebal_3
			#}
			custom_tooltip = approach_ev_leader_rebal_4.tooltip
			set_situation_flag = select_approach_ev_leader_rebal_4 
			remove_situation_flag = select_approach_ev_leader_rebal_1
			remove_situation_flag = select_approach_ev_leader_rebal_2
			remove_situation_flag = select_approach_ev_leader_rebal_3
		}
		ai_weight = 0
	}
}






situation_manpower_deficit = {
	picture = GFX_evt_galactic_market
	category = negative
	fail_icon = GFX_situation_outcome_meh
	fail_icon_frame = GFX_situation_outcome_frame_green
	complete_icon = GFX_situation_outcome_bankrupcy
	complete_icon_frame = GFX_situation_outcome_frame_red

	on_start = {
		set_situation_flag = deficit_situation
	}
	on_abort = {
		owner = {
			add_resource = {
				manpower = 100
			}
		}
	}

	start_value = 15
	stages = {
		deficit_first = {
			icon = GFX_situation_stage_1
			icon_background = GFX_situation_stage_frame_red
			end = 25
			modifier = {
				ship_homeless_ev_produces_mult = -0.15
			}
		}
		deficit_second = {
			icon = GFX_situation_stage_2
			icon_background = GFX_situation_stage_frame_red
			end = 50
			modifier = {
				ship_homeless_ev_produces_mult = -0.33
			}
		}
		deficit_third = {
			icon = GFX_situation_stage_3
			icon_background = GFX_situation_stage_frame_red
			end = 75
			modifier = {
				ship_homeless_ev_produces_mult = -0.65
			}
		}
		deficit_fourth = {
			icon = GFX_situation_stage_4
			icon_background = GFX_situation_stage_frame_red
			end = 100
			#on_first_enter = {
			#	situation_event = { id = ev_situation.200 }
			#}
			modifier = {
				ship_homeless_ev_produces_mult = -1
			}
		}
	}
	
	on_progress_complete = {
		custom_tooltip = situation_manpower_deficit_tooltip
		owner = {
			add_modifier = {
				modifier = country_defaulted
				years = 10
			}
		}
		
		#country_defaulted_effect = yes
		hidden_effect = {
			
			situation_event = { id = ev_situation.200 }
		}
	}
	on_fail = {
		custom_tooltip = deficit_situation_finish_tooltip
		
		hidden_effect = { destroy_situation = this }
	}
	monthly_progress = {
		base = 0
		modifier = {
			add = value:deficit_situation_progress_value|RESOURCE|manpower|
			desc = string_expenditures_greater_than_income_manpower
			owner = {
				resource_stockpile_compare = {
					resource = manpower
					value <= 0
				}
			}
		}
		modifier = {
			subtract = 5
			desc = string_not_in_deficit_manpower
			owner = {
				resource_income_compare = {
					resource = manpower
					value > 0
				}
			}
		}
		modifier = {
			subtract = 1
			desc = string_resource_reserves_manpower
			owner = {
				resource_stockpile_compare = {
					resource = manpower
					value > 0
				}
				resource_income_compare = {
					resource = manpower
					value <= 0
				}
			}
		}
	}
	approach = {
		name = deficit_approach_do_nothing
		icon = GFX_situation_approach_this_is_fine
		icon_background = GFX_situation_approach_bg_yellow
		default = yes
		on_select = {
			custom_tooltip = deficit_approach_do_nothing_tooltip
		}
		ai_weight = {
			base = 1
		}
	}
	#approach = {
	#	name = deficit_approach_cut_science_investment
	#	icon = GFX_situation_approach_research
	#	icon_background = GFX_situation_approach_bg_red
	#	modifier = {
	#		planet_researchers_produces_mult = -0.5
	#		planet_buildings_energy_upkeep_mult = -0.2
	#	}
#
	#	ai_weight = {
	#		base = 0
	#		modifier = {
	#			add = 2
	#			current_stage = deficit_third
	#		}
	#		modifier = {
	#			add = 2
	#			current_stage = deficit_fourth
	#		}
	#	}
	#}
}
