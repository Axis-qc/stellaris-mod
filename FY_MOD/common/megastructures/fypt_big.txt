fypt_big_one = {
    entity = "" # 为空，表示没有特定的实体模型
    construction_entity = "military_station_small_entity" # 建设期间的实体模型
    portrait = "GFX_megastructure_construction_background" # 用户界面中的巨构建筑背景图
    place_entity_on_planet_plane = no # 实体放置在星球平面上
    #build_outside_gravity_well = no#恒星重力井外放置
    entity_offset = { x = 0 y = 0 } # 实体偏移量
    scales_with_planet = no # 实体随着星球大小缩放
    show_galactic_map_icon = no # 在星系地图上不显示图标
    show_in_outliner = yes # 在系统大纲中不显示
    build_time = 90 # 建设时间90天

    starbase = fypt_level_1 # 与特定星基地级别关联

    resources = {
        # 所需资源
        category = megastructures
        cost = {
            alloys = 400 # 需要合金
            influence = 10 # 需要影响力
        }
    }
    construction_blocks_and_blocked_by = none # 不阻挡其他建设，也不被其他建设阻挡
    #custom_tooltip_requirements = "MEGASTRUCTURE_TOOLTIP_REQUIREMENTS_ORBITAL_RING" # 自定义工具提示要求

    potential = { has_technology = tech_space_defense_station_1 } # 拥有特定科技才能建设

    possible = {
        # 建设条件
        hidden_trigger = {
            exists = starbase # 星基地存在
        }
        custom_tooltip = {
            # 自定义工具提示
            fail_text = "requires_inside_border"
            is_inside_border = from # 必须在国境内
        }
    }

    placement_rules = {
        # 放置规则
        planet_possible = {
            # 星球可能的条件
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "fypt_not_one"
                planet = {
                    not = { exists = orbital_defence }
                }
                #NOT = {
                #    has_planet_flag = fypt_ship
                #    has_planet_flag = fypt_ship_three
                #} #没有建造
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "fypt_not_two"
                NOT = { is_star = yes } #不是恒星
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_surveyed_planet"
                is_surveyed = {
                    # 星球必须已被勘探
                    who = prev.from
                    status = yes
                }
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_no_anomaly"
                NOT = { has_anomaly = yes } # 星球不能有异常现象
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_not_hostile_or_primitive"
                NOR = {
                    # 星球不能是敌对的或原始的
                    planet_is_hostile_or_crisis = yes
                    AND = {
                        exists = owner
                        owner = {
                            is_country_type = primitive
                        }
                    }
                }
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_no_existing_megastructure"
                NOR = {
                    # 星球上不能已有其他巨构建筑
                    #has_planet_flag = megastructure
                    has_planet_flag = has_megastructure
                    has_planet_flag = ruined_orbital_ring_planet
                    solar_system = {
                        has_star_flag = ring_world_built
                    }
                    is_artificial = yes
                }
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_no_orbital_debris"
                NOR = {
                    has_planet_flag = has_orbital_debris
                }
            }
            #if = {
            #    # 如果是AI控制
            #    limit = {
            #        from = { is_ai = yes }
            #    }
            #    num_pops >= 25 # 星球上的人口数必须大于或等于25
            #}
        }
    }
    ai_weight = {
        # AI建设权重
        factor = 5
        modifier = {
            # 修改器
            factor = 0
            solar_system = {
                # 如果是首都星系
                exists = owner
                is_same_value = owner.capital_scope.solar_system
            }
        }
        modifier = {
            # 修改器
            factor = 10
            any_neighbor_system = {
                # 如果是邻接首都星系
                exists = owner
                is_same_value = owner.capital_scope.solar_system
            }
        }

        modifier = {
            # 修改器
            factor = 50
            any_neighbor_system = {
                # 如果邻接系统中有其他国家
                exists = owner
                owner = { NOT = { is_same_value = from } }
            }
        }
        #modifier = {
        #    # 修改器
        #    factor = 10
        #    any_system_colony = {
        #        # 如果有人口数大于或等于20的殖民地
        #        num_pops >= 20
        #        NOT = { exists = orbital_defence }
        #    }
        #}
    }

    on_build_start = { } # 建设开始事件
    on_build_cancel = { } # 建设取消事件

    on_build_complete = {
        # 建设完成事件
        fromfrom.planet = {
            # 所在星球
            #set_planet_flag = fypt_ship # 设置星球标志
            #save_event_target_as = fypt_ship_star # 保存事件目标
            create_starbase = {
                # 创建星基地
                size = fypt_ship_two
                owner = FROM
                effect = { }
            }
        }
        remove_megastructure = fromfrom # 移除巨构建筑
        #from = {
        # 当前国家
        #country_event = { id = tutorial.2121 } # 触发国家事件
        #}
    }
}
fypt_big_two = {
    entity = "orbital_ring_01_destroyed_entity"
    construction_entity = "orbital_ring_construction_entity"
    portrait = "GFX_megastructure_construction_background"
    place_entity_on_planet_plane = yes
    entity_offset = { x = 0 y = 0 }
    scales_with_planet = yes

    potential = { always = no }
    is_ruined_orbital_ring = yes
}
fypt_big_three = {
    entity = "" # 为空，表示没有特定的实体模型
    construction_entity = "starbase_citadel_section_entity" # 建设期间的实体模型
    portrait = "GFX_megastructure_construction_background" # 用户界面中的巨构建筑背景图
    place_entity_on_planet_plane = no # 实体放置在星球平面上
    #build_outside_gravity_well = no#恒星重力井外放置
    entity_offset = { x = 0 y = 0 } # 实体偏移量
    scales_with_planet = no # 实体随着星球大小缩放
    show_galactic_map_icon = no # 在星系地图上不显示图标
    show_in_outliner = yes # 在系统大纲中不显示
    build_time = 240 # 建设时间

    starbase = fypt_level_2 # 与特定星基地级别关联

    resources = {
        # 所需资源
        category = megastructures
        cost = {
            alloys = 2000 # 需要合金
            influence = 20 # 需要影响力
        }
    }
    construction_blocks_and_blocked_by = none # 不阻挡其他建设，也不被其他建设阻挡
    #custom_tooltip_requirements = "MEGASTRUCTURE_TOOLTIP_REQUIREMENTS_ORBITAL_RING" # 自定义工具提示要求

    potential = { has_technology = tech_starbase_5 } # 拥有特定科技才能建设

    possible = {
        # 建设条件
        hidden_trigger = {
            exists = starbase # 星基地存在
        }
        custom_tooltip = {
            # 自定义工具提示
            fail_text = "requires_inside_border"
            is_inside_border = from # 必须在国境内
        }
    }

    placement_rules = {
        # 放置规则
        planet_possible = {
            # 星球可能的条件
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "fypt_not_one"  # 失败提示文本
                planet = {
                    OR = {
                        # 满足以下任意条件
                        NOT = {
                            # 没有防御设施
                            exists = orbital_defence
                        }
                        AND = {
                            # 防御设施符合特定尺寸
                            exists = orbital_defence
                            orbital_defence.starbase = {
                                has_starbase_size = fypt_ship_two
                            }
                        }
                    }
                }
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "fypt_not_two"
                NOT = { is_star = yes } #不是恒星
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_surveyed_planet"
                is_surveyed = {
                    # 星球必须已被勘探
                    who = prev.from
                    status = yes
                }
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_no_anomaly"
                NOT = { has_anomaly = yes } # 星球不能有异常现象
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_not_hostile_or_primitive"
                NOR = {
                    # 星球不能是敌对的或原始的
                    planet_is_hostile_or_crisis = yes
                    AND = {
                        exists = owner
                        owner = {
                            is_country_type = primitive
                        }
                    }
                }
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_no_existing_megastructure"
                NOR = {
                    # 星球上不能已有其他巨构建筑
                    #has_planet_flag = megastructure
                    has_planet_flag = has_megastructure
                    has_planet_flag = ruined_orbital_ring_planet
                    solar_system = {
                        has_star_flag = ring_world_built
                    }
                    is_artificial = yes
                }
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_no_orbital_debris"
                NOR = {
                    has_planet_flag = has_orbital_debris
                }
            }
            #if = {
            #    # 如果是AI控制
            #    limit = {
            #        from = { is_ai = yes }
            #    }
            #    num_pops >= 25 # 星球上的人口数必须大于或等于25
            #}
        }
    }
    ai_weight = {
        # AI建设权重
        factor = 5
        modifier = {
            # 修改器
            factor = 10
            solar_system = {
                # 如果是首都星系
                exists = owner
                is_same_value = owner.capital_scope.solar_system
            }
        }
        modifier = {
            # 修改器
            factor = 1
            any_neighbor_system = {
                # 如果是邻接首都星系
                exists = owner
                is_same_value = owner.capital_scope.solar_system
            }
        }
        modifier = {
            # 修改器
            factor = 10
            any_neighbor_system = {
                # 如果邻接系统中有其他国家
                exists = owner
                owner = { NOT = { is_same_value = from } }
            }
        }
        modifier = {
            # 修改器
            factor = 10
            any_system_colony = {
                # 如果有人口数大于或等于20的殖民地
                num_pops >= 20
                NOT = { exists = orbital_defence }
            }
        }
    }

    on_build_start = {
    } # 建设开始事件
    on_build_cancel = { } # 建设取消事件
    on_build_complete = {
        # 建设完成事件
        fromfrom.planet = {
            # 所在星球
            #set_planet_flag = fypt_ship_three # 设置星球标志
            if = {
                limit = { exists = orbital_defence }
                destroy_fleet = orbital_defence
            }
            create_starbase = {
                # 创建星基地
                size = fypt_ship_three
                owner = FROM
                effect = { }
            }
        }
        remove_megastructure = fromfrom # 移除巨构建筑
        #from = {
        # 当前国家
        #country_event = { id = tutorial.2121 } # 触发国家事件
        #}
    }
}
fypt_produce_one = {
    entity = "" # 为空，表示没有特定的实体模型
    #construction_entity = "starbase_outpost_section_entity" # 建设期间的实体模型
    construction_entity = "starbase_starport_section_entity"
    portrait = "GFX_megastructure_construction_background" # 用户界面中的巨构建筑背景图
    place_entity_on_planet_plane = no # 实体放置在星球平面上
    #build_outside_gravity_well = no#恒星重力井外放置
    entity_offset = { x = 0 y = 0 } # 实体偏移量
    scales_with_planet = no # 实体随着星球大小缩放
    show_galactic_map_icon = no # 在星系地图上不显示图标
    show_in_outliner = yes # 在系统大纲中不显示
    build_time = 240 # 建设时间

    starbase = fypt_produce_ship_level_1 # 与特定星基地级别关联

    resources = {
        # 所需资源
        category = megastructures
        cost = {
            alloys = 400 # 需要的合金
            influence = 20 # 需要的影响力
        }
    }
    construction_blocks_and_blocked_by = none # 不阻挡其他建设，也不被其他建设阻挡
    #custom_tooltip_requirements = "MEGASTRUCTURE_TOOLTIP_REQUIREMENTS_ORBITAL_RING" # 自定义工具提示要求

    potential = { has_technology = tech_space_defense_station_1 } # 拥有特定科技才能建设

    possible = {
        # 建设条件
        hidden_trigger = {
            exists = starbase # 星基地存在
        }
        custom_tooltip = {
            # 自定义工具提示
            fail_text = "requires_inside_border"
            is_inside_border = from # 必须在国境内
        }
    }

    placement_rules = {
        # 放置规则
        planet_possible = {
            # 星球可能的条件
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "fypt_not_one"
                planet = {
                    not = { exists = orbital_defence }
                }
                #NOT = { has_planet_flag = fypt_ship_three } #没有建造
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "fypt_not_two"
                NOT = { is_star = yes } #不是恒星
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "fypt_not_three"
                NOT = { has_planet_flag = fypt_produce_ship } #没有建造
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_surveyed_planet"
                is_surveyed = {
                    # 星球必须已被勘探
                    who = prev.from
                    status = yes
                }
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_no_anomaly"
                NOT = { has_anomaly = yes } # 星球不能有异常现象
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_not_hostile_or_primitive"
                NOR = {
                    # 星球不能是敌对的或原始的
                    planet_is_hostile_or_crisis = yes
                    AND = {
                        exists = owner
                        owner = {
                            is_country_type = primitive
                        }
                    }
                }
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_no_existing_megastructure"
                NOR = {
                    # 星球上不能已有其他巨构建筑
                    #has_planet_flag = megastructure
                    has_planet_flag = has_megastructure
                    has_planet_flag = ruined_orbital_ring_planet
                    solar_system = {
                        has_star_flag = ring_world_built
                    }
                    is_artificial = yes
                }
            }
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "requires_no_orbital_debris"
                NOR = {
                    has_planet_flag = has_orbital_debris
                }
            }
            #if = {
            #    # 如果是AI控制
            #    limit = {
            #        from = { is_ai = yes }
            #    }
            #    num_pops >= 25 # 星球上的人口数必须大于或等于25
            #}
        }
    }
    ai_weight = {
        # AI建设权重
        factor = 0
        modifier = {
            # 修改器
            factor = 0
            solar_system = {
                # 如果是首都星系
                exists = owner
                is_same_value = owner.capital_scope.solar_system
            }
        }
        modifier = {
            # 修改器
            factor = 0
            any_neighbor_system = {
                # 如果是邻接首都星系
                exists = owner
                is_same_value = owner.capital_scope.solar_system
            }
        }
        modifier = {
            # 修改器
            factor = 0
            any_neighbor_system = {
                # 如果邻接系统中有其他国家
                exists = owner
                owner = { NOT = { is_same_value = from } }
            }
        }
        modifier = {
            # 修改器
            factor = 0
            any_system_colony = {
                # 如果有人口数大于或等于50的殖民地
                num_pops >= 50
                NOT = { exists = orbital_defence }
            }
        }
    }

    on_build_start = {
    } # 建设开始事件
    on_build_cancel = { } # 建设取消事件
    on_build_complete = {
        # 建设完成事件
        fromfrom.planet = {
            # 所在星球
            #set_planet_flag = fypt_produce_ship # 设置星球标志
            if = {
                limit = { exists = orbital_defence }
                destroy_fleet = orbital_defence
            }
            create_starbase = {
                # 创建星基地
                size = fypt_produce_ship_1
                owner = FROM
                effect = { }
            }
        }
        remove_megastructure = fromfrom # 移除巨构建筑
        #from = {
        # 当前国家
        #country_event = { id = tutorial.2121 } # 触发国家事件
        #}
    }
}
die_starbase = {
    entity = "" # 为空，表示没有特定的实体模型
    construction_entity = "starbase_citadel_section_entity" # 建设期间的实体模型
    portrait = "GFX_megastructure_construction_background" # 用户界面中的巨构建筑背景图
    place_entity_on_planet_plane = no # 实体放置在星球平面上
    #build_outside_gravity_well = no#恒星重力井外放置
    entity_offset = { x = 10 y = 10 } # 实体偏移量
    scales_with_planet = no # 实体随着星球大小缩放
    show_galactic_map_icon = no # 在星系地图上不显示图标
    show_in_outliner = yes # 在系统大纲中不显示
    build_time = 90 # 建设时间

    #starbase = fypt_level_2 # 与特定星基地级别关联

    resources = {
        # 所需资源
        category = megastructures
        cost = {
            alloys = 10 # 需要1000合金
            influence = 1 # 需要50影响力
        }
    }
    construction_blocks_and_blocked_by = none # 不阻挡其他建设，也不被其他建设阻挡
    #custom_tooltip_requirements = "MEGASTRUCTURE_TOOLTIP_REQUIREMENTS_ORBITAL_RING" # 自定义工具提示要求

    potential = { has_technology = tech_space_defense_station_1 } # 拥有特定科技才能建设

    possible = {
        # 建设条件
        hidden_trigger = {
            exists = starbase # 星基地存在
        }
        custom_tooltip = {
            # 自定义工具提示
            fail_text = "requires_inside_border"
            is_inside_border = from # 必须在国境内
        }
    }
    placement_rules = {
        planet_possible = {
            # 星球可能的条件
            custom_tooltip = {
                # 自定义工具提示
                fail_text = "die_starbase_1"
                planet = {
                    exists = orbital_defence
                }
                #or = {
                #    has_planet_flag = fypt_ship
                #    has_planet_flag = fypt_ship_three
                #    has_planet_flag = fypt_produce_ship
                #}
            }
        }

    }
    ai_weight = {
        factor = 0
    }

    on_build_start = {
    } # 建设开始事件
    on_build_cancel = { } # 建设取消事件
    on_build_complete = {
        # 建设完成事件
        fromfrom.planet = {
            if = {
                limit = { exists = orbital_defence }
                destroy_fleet = orbital_defence
            }
            remove_planet_flag = fypt_ship
            remove_planet_flag = fypt_ship_three
            remove_planet_flag = fypt_produce_ship
        }
        remove_megastructure = fromfrom # 移除巨构建筑
        from = {
            #当前国家
            #country_event = { id = fypt.01 } # 触发国家事件
        }
    }
}
#在重力井外造，要有一个球，直接在重力井外造会一直说装了FTL组件出不来(星界裂隙上能造，离谱）
#fypt_big_four = {
#    entity = "military_station_small_entity" # 为空，表示没有特定的实体模型
#    construction_entity = "military_station_small_entity" # 建设期间的实体模型
#    portrait = "GFX_megastructure_construction_background" # 用户界面中的巨构建筑背景图
#    place_entity_on_planet_plane = no # 实体放置在星球平面上
#    build_outside_gravity_well = yes#恒星重力井外放置
#    entity_offset = { x = 0 y = 0 } # 实体偏移量
#    scales_with_planet = no # 实体随着星球大小缩放
#    show_galactic_map_icon = no # 在星系地图上不显示图标
#    show_in_outliner = yes # 在系统大纲中不显示
#    build_time = 90 # 建设时间90天
#
#    starbase = fypt_sk_level_1 # 与特定星基地级别关联
#
#    resources = {
#        # 所需资源
#        category = megastructures
#        cost = {
#            alloys = 100 # 需要100合金
#            influence = 50 # 需要50影响力
#        }
#    }
#
#    construction_blocks_and_blocked_by = none # 不阻挡其他建设，也不被其他建设阻挡
#    #custom_tooltip_requirements = "MEGASTRUCTURE_TOOLTIP_REQUIREMENTS_ORBITAL_RING" # 自定义工具提示要求
#
#    potential = { has_technology = tech_space_defense_station_1 } # 拥有特定科技才能建设
#
#    possible = {
#        # 建设条件
#        hidden_trigger = {
#            exists = starbase # 星基地存在
#        }
#        custom_tooltip = {
#            # 自定义工具提示
#            fail_text = "requires_inside_border"
#            is_inside_border = from # 必须在国境内
#        }
#    }
#    placement_rules = {
#        # 放置规则
#    }
#    ai_weight = {
#        # AI建设权重
#        factor = 5
#        modifier = {
#            # 修改器
#            factor = 3
#            solar_system = {
#                # 如果是首都星系
#                exists = owner
#                is_same_value = owner.capital_scope.solar_system
#            }
#        }
#        modifier = {
#            # 修改器
#            factor = 2
#            any_neighbor_system = {
#                # 如果是邻接首都星系
#                exists = owner
#                is_same_value = owner.capital_scope.solar_system
#            }
#        }
#
#        modifier = {
#            # 修改器
#            factor = 0.1
#            any_neighbor_system = {
#                # 如果邻接系统中有其他国家
#                exists = owner
#                owner = { NOT = { is_same_value = from } }
#            }
#        }
#        modifier = {
#            # 修改器
#            factor = 3
#            any_system_colony = {
#                # 如果有人口数大于或等于50的殖民地
#                num_pops >= 50
#                NOT = { exists = orbital_defence }
#            }
#        }
#    }
#    on_build_start = { } # 建设开始事件
#    on_build_cancel = { } # 建设取消事件
#    on_build_complete = {
#        # 建设完成事件
#    }
#}
#fypt_big_four = {
#    entity = "military_station_small_entity" # 为空，表示没有特定的实体模型
#    construction_entity = "military_station_small_entity" # 建设期间的实体模型
#    portrait = "GFX_megastructure_construction_background" # 用户界面中的巨构建筑背景图
#    place_entity_on_planet_plane = no # 实体放置在星球平面上
#    build_outside_gravity_well = yes#恒星重力井外放置
#    entity_offset = { x = 0 y = 0 } # 实体偏移量
#    scales_with_planet = no # 实体随着星球大小缩放
#    show_galactic_map_icon = no # 在星系地图上不显示图标
#    show_in_outliner = yes # 在系统大纲中不显示
#    build_time = 90 # 建设时间90天
#    starbase = fypt_sk_level_1 # 与特定星基地级别关联
#
#    resources = {
#        # 所需资源
#        category = megastructures
#        cost = {
#            alloys = 1000 # 需要1000合金
#            influence = 50 # 需要50影响力
#        }
#    }
#    upgrade_from = {
#        fypt_big_three
#    }
#    construction_blocks_and_blocked_by = none # 不阻挡其他建设，也不被其他建设阻挡
#    #custom_tooltip_requirements = "MEGASTRUCTURE_TOOLTIP_REQUIREMENTS_ORBITAL_RING" # 自定义工具提示要求
#
#    potential = { has_technology = tech_space_defense_station_1 } # 拥有特定科技才能建设
#
#    possible = {
#        # 建设条件
#        #hidden_trigger = {
#        #    exists = starbase # 星基地存在
#        #}
#        #custom_tooltip = {
#        #    # 自定义工具提示
#        #    fail_text = "requires_inside_border"
#        #    is_inside_border = from # 必须在国境内
#        #}
#    }
#
#    placement_rules = {
#        #建造条件
#    }
#    ai_weight = {
#        # AI建设权重
#        factor = 5
#        modifier = {
#            # 修改器
#            factor = 3
#            solar_system = {
#                # 如果是首都星系
#                exists = owner
#                is_same_value = owner.capital_scope.solar_system
#            }
#        }
#        modifier = {
#            # 修改器
#            factor = 2
#            any_neighbor_system = {
#                # 如果是邻接首都星系
#                exists = owner
#                is_same_value = owner.capital_scope.solar_system
#            }
#        }
#
#        modifier = {
#            # 修改器
#            factor = 0.1
#            any_neighbor_system = {
#                # 如果邻接系统中有其他国家
#                exists = owner
#                owner = { NOT = { is_same_value = from } }
#            }
#        }
#        modifier = {
#            # 修改器
#            factor = 3
#            any_system_colony = {
#                # 如果有人口数大于或等于50的殖民地
#                num_pops >= 50
#                NOT = { exists = orbital_defence }
#            }
#        }
#    }
#
#    on_build_start = { } # 建设开始事件
#    on_build_cancel = { } # 建设取消事件
#    on_build_complete = {
#        # 建设完成事件
#        fromfrom.solar_system = {
#            create_starbase = {
#                # 创建星基地
#                size = fypt_ship_three
#                owner = FROM
#                effect = { }
#            }
#        }
#        remove_megastructure = fromfrom # 移除巨构建筑
#        #from = {
#        # 当前国家
#        #country_event = { id = tutorial.2121 } # 触发国家事件
#        #}
#    }
#}